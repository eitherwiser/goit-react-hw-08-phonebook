{"version":3,"sources":["components/Form/Form.module.css","components/Filter/Filter.module.css","components/ContactsList/ContactsList.module.css","components/UserMenu/UserMenu.module.css","components/Form/Form.jsx","components/Filter/Filter.jsx","components/ContactsList/ContactsList.jsx","components/UserMenu/UserMenu.jsx","views/PhonebookPage/PhonebookPage.jsx"],"names":["module","exports","ContactForm","dispatch","useDispatch","contacts","useSelector","state","items","useState","name","setName","number","setNumber","handleOnChange","e","target","type","value","resetForm","preventDefault","onSubmit","some","contact","alert","addContact","className","s","form","label","input","onChange","pattern","title","required","onClick","reset_btn","submit__btn","btn","Filter","filter","changeFilter","ContactsList","allContacts","normalizeFilter","trim","toLowerCase","includes","allResults","Set","visibleContacts","isLoading","loading","useEffect","fetchContacts","length","Loader","table_wrapper","table_wrapper__scroll","table","table_header","table_header__floating_cell","class","tbody","map","id","table_row","item","href","options","deleteContact","UserMenu","authSelectors","phonebook_header","logo__wrapper","logo","user_menu__wrapper","avatar","operations","PhonebookPage","isloggedIn","getIsLoggedIn"],"mappings":"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","file":"static/js/3.fc93019b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__3epES\",\"label\":\"Form_label__2ZYNC\",\"input\":\"Form_input__2KzDR\",\"btn\":\"Form_btn__3xXNE\",\"reset_btn\":\"Form_reset_btn__59bxe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2Rr7X\",\"input\":\"Filter_input__1TkWI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table_wrapper\":\"ContactsList_table_wrapper__3MTTx\",\"table_wrapper__scroll\":\"ContactsList_table_wrapper__scroll__2sPt1\",\"table\":\"ContactsList_table__XXVUB\",\"table_header\":\"ContactsList_table_header__34nKN\",\"table_header__floating_cell\":\"ContactsList_table_header__floating_cell__20kbQ\",\"table_row\":\"ContactsList_table_row__1fx8O\",\"item\":\"ContactsList_item__2zBhL\",\"btn\":\"ContactsList_btn__2y6jd\",\"name\":\"ContactsList_name__1q_9X\",\"number\":\"ContactsList_number__21RNH\",\"contact\":\"ContactsList_contact__11VjD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"phonebook_header\":\"UserMenu_phonebook_header__3enh2\",\"logo__wrapper\":\"UserMenu_logo__wrapper__M3trP\",\"logo\":\"UserMenu_logo__1fG39\",\"user_menu__wrapper\":\"UserMenu_user_menu__wrapper__tgc1h\",\"avatar\":\"UserMenu_avatar__2IQuW\",\"btn\":\"UserMenu_btn__LIeiz\"};","import { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { addContact } from \"redux/contacts/contacts-operations\"\r\nimport s from \"./Form.module.css\";\r\n//\r\n\r\n\r\nconst ContactForm = () => {\r\n  \r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(state => state.contacts.items);\r\n\r\n  const [name, setName] = useState('')\r\n  const [number, setNumber] = useState('')\r\n\r\n  const handleOnChange = (e) => {\r\n    const { type, value } = e.target;\r\n    switch(type) {\r\n      case 'text':\r\n        setName(value);\r\n        break;\r\n      \r\n      case 'tel':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const resetForm = (e) => {\r\n    e.preventDefault();\r\n    setName('');\r\n    setNumber('');\r\n  }\r\n\r\n  const onSubmit = (e) => {\r\n    if (contacts.some(contact => contact.name === name)) {\r\n      resetForm(e);\r\n      return alert(`\"${name}\" is already in your phonebook.`);\r\n    }\r\n    else if (contacts.some(contact => contact.number === number)) {\r\n      resetForm(e);\r\n      return alert(`Person with number \"${number}\" is already in your phonebook.`);\r\n    }\r\n    else {\r\n      dispatch(addContact({ name, number }));\r\n      resetForm(e);\r\n    }    \r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n        <form onSubmit={onSubmit} className={s.form}>\r\n        <label className={s.label}>\r\n          Name &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n          <input\r\n            className={s.input}\r\n            type=\"text\"\r\n            onChange={handleOnChange}\r\n            value={name}\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n          <button onClick={() => setName('')} className={`${s.reset_btn}`} type=\"button\">\r\n            x\r\n          </button>\r\n          </label>\r\n\r\n        <label className={s.label}>\r\n          Number &nbsp;\r\n          <input\r\n            className={s.input}\r\n            type=\"tel\"\r\n            onChange={handleOnChange}\r\n            name=\"number\"\r\n            value={number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n          <button onClick={() => setNumber('')} className={`${s.reset_btn}`} type=\"button\">\r\n            x\r\n          </button>\r\n        </label>\r\n        <button className={`${s.submit__btn} ${ s.btn}`} type=\"onSubmit\">\r\n            Add contact\r\n          </button>\r\n        </form>\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default ContactForm;\r\n\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { changeFilter } from \"redux/contacts/contacts-actions.js\"\r\nimport s from \"./Filter.module.css\";\r\n//\r\n\r\n\r\nconst Filter = () => {\r\n  \r\n  const dispatch = useDispatch();\r\n  const value = useSelector(state => state.contacts.filter);\r\n  \r\n  \r\n  return (\r\n      <label className={s.label}>Search contact &nbsp;\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={(e) => dispatch(changeFilter(e.target.value))}\r\n        ></input>\r\n        </label>\r\n\r\n  );\r\n}\r\n\r\n\r\nexport default (Filter);","import {useEffect} from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Loader from 'components/Loader/Loader.jsx'\r\n\r\nimport Filter from 'components/Filter/Filter.jsx';\r\nimport { fetchContacts, deleteContact } from 'redux/contacts/contacts-operations';\r\nimport s from \"./ContactsList.module.css\";\r\n//\r\n\r\n    const visibleContacts = (allContacts, filter) => {\r\n      const normalizeFilter = filter.trim().toLowerCase();\r\n      const name = allContacts.filter((contact) => (\r\n        contact.name.toLowerCase().includes(normalizeFilter)))\r\n      const number = allContacts.filter((contact) => (\r\n        contact.number.toLowerCase().includes(normalizeFilter)))\r\n      const allResults = [...name, ...number];\r\n      return [...new Set(allResults)];\r\n    };\r\n//\r\n\r\n\r\nconst ContactsList = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector((state) => visibleContacts(state.contacts.items, state.contacts.filter));\r\n  const isLoading = useSelector((state) => state.contacts.loading)\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchContacts());\r\n  }, [dispatch]);\r\n\r\n\r\n  return (\r\n    <>\r\n      <Filter />\r\n      {!contacts.length && !isLoading && <h4>Contacts list is empty.</h4>}\r\n      {isLoading && <Loader/>}\r\n      {!!contacts.length && !isLoading &&\r\n        <div className={s.table_wrapper}>\r\n        <div className={s.table_wrapper__scroll}>\r\n        <table className={s.table}>\r\n          <caption></caption>\r\n          <thead className={s.table_header}>\r\n          <tr>\r\n            <th><div className={s.table_header__floating_cell} label=\"Name\"></div></th>\r\n            <th><div className={s.table_header__floating_cell} label=\"Phone number\"></div></th>\r\n            <th><div className={s.table_header__floating_cell} label=\"Options\"></div></th>\r\n            <th class=\"scrollbarhead\"/>\r\n          </tr>\r\n          </thead>\r\n          <tbody className={s.tbody}>\r\n          {contacts.map(({id, name, number }) => (\r\n            <tr key={id} className={s.table_row}>\r\n            <td className={`${s.item} + ${ s.name}`}>{name}&nbsp;</td>\r\n            <td className={`${s.item} + ${ s.number}`}><a href={\"tel:\" + { number }} className={s.contact}>{number}</a></td>\r\n            <td className={`${s.item} + ${ s.options}`}>\r\n              <button\r\n                type=\"button\"\r\n                className={s.btn}\r\n                onClick={() => dispatch(deleteContact(id))}\r\n              >\r\n                <span className=\"material-icons\">delete</span>\r\n              </button>\r\n              </td>\r\n            </tr>))}\r\n          </tbody>\r\n          </table>\r\n          </div>\r\n          </div>\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ContactsList;\r\n\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport * as authSelectors from \"redux/auth/auth-selectors\";\r\nimport * as operations from \"redux/auth/auth-operations\";\r\n\r\nimport s from './UserMenu.module.css'\r\n//\r\n\r\nexport default function UserMenu() {\r\n  const dispatch = useDispatch();\r\n  const name = useSelector(authSelectors.getUserName);\r\n  \r\n\r\n  return (\r\n    <div className={s.phonebook_header}>\r\n    <div className={s.logo__wrapper}>\r\n      <span className={s.logo}>Phonebook</span>\r\n    </div>\r\n    <div className={s.user_menu__wrapper}>\r\n      <span className={`material-icons ${s.avatar}`}>\r\n        support_agent\r\n      </span>\r\n      <span className={s.name}>{name}</span>\r\n      <button\r\n        className={s.btn}\r\n        type=\"button\"\r\n        onClick={() => dispatch(operations.logOut())}\r\n      >\r\n        logout\r\n      </button>\r\n    </div>\r\n  </div>\r\n  );\r\n}","import { useSelector } from 'react-redux';\r\n\r\n\r\nimport ContactForm from 'components/Form/Form.jsx';\r\nimport ContactsList from 'components/ContactsList/ContactsList.jsx';\r\nimport UserMenu from 'components/UserMenu/UserMenu.jsx';\r\nimport { getIsLoggedIn } from 'redux/auth/auth-selectors';\r\n//\r\n\r\n\r\n\r\n\r\n\r\nconst PhonebookPage = () => {\r\n  const isloggedIn = useSelector(getIsLoggedIn)\r\n\r\n  return (\r\n    <>\r\n      {isloggedIn && <UserMenu/>}\r\n      <ContactForm />\r\n      <ContactsList />\r\n    </>\r\n  )\r\n};\r\n\r\nexport default PhonebookPage;"],"sourceRoot":""}