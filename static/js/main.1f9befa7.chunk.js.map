{"version":3,"sources":["redux/contacts/contacts-operations.js","redux/auth/auth-operations.js","components/Loader/Loader.jsx","redux/auth/auth-selectors.js","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducers.js","redux/auth/auth-slice.js","redux/store.js","App.js","index.js"],"names":["axios","defaults","baseURL","fetchContacts","createAsyncThunk","a","get","resp","console","log","data","addContact","contact","post","deleteContact","id","delete","patch","token","headers","common","Authorization","register","credentials","logIn","logOut","fetchCurrentUser","_","thunkAPI","state","getState","persistedToken","auth","rejectWithValue","App","type","color","height","width","timeout","Component","getIsLoggedIn","isLoggedIn","getUserName","user","name","getFetchCurrentUser","isFetchingCurrent","changeFilter","createAction","items","createReducer","fulfilled","payload","filter","loading","pending","rejected","contactsReducer","combineReducers","authSlice","createSlice","initialState","email","extraReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contacts","persistor","persistStore","LoginPage","lazy","RegistrationPage","PhonebookPage","UnknownPage","isloggedIn","useSelector","dispatch","useDispatch","isFetchCurrentUser","useEffect","path","element","replace","to","fallback","Loader","Suspense","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1f9befa7.chunk.js","sourcesContent":["import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nexport const fetchContacts = createAsyncThunk(\n  'contacts/fetchContacts',\n  async () => {\n    try {\n      const resp = await axios.get('/contacts');\n      console.log(resp.data);\n      return resp.data;\n    } catch (error) {\n      console.log(error);\n      return error;\n    }\n  },\n);\n\nexport const addContact = createAsyncThunk(\n  'contacts/addContact',\n  async contact => {\n    try {\n      const resp = await axios.post('/contacts', contact);\n      return resp.data;\n    } catch (error) {\n      console.log(error);\n      return error;\n    }\n  },\n);\n\nexport const deleteContact = createAsyncThunk(\n  'contacts/deleteContact',\n  async id => {\n    try {\n      await axios.delete(`/contacts/${id}`);\n      return id;\n    } catch (error) {\n      console.log(error);\n      return error;\n    }\n  },\n);\n\nexport const patchContact = createAsyncThunk(\n  'contacts/deleteContact',\n  async (id, contact) => {\n    try {\n      const resp = await axios.patch(`/contacts/${id}`, contact);\n      return resp;\n    } catch (error) {\n      console.log(error);\n      return error;\n    }\n  },\n);\n","import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n//\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\nconst register = createAsyncThunk('auth/register', async credentials => {\n  try {\n    let { data } = await axios.post('/users/signup', credentials);\n    token.set(data.token);\n    return data;\n  } catch (error) {\n    console.log(error);\n    return error;\n  }\n});\n\nconst logIn = createAsyncThunk('auth/login', async credentials => {\n  try {\n    let { data } = await axios.post('/users/login', credentials);\n    token.set(data.token);\n    return data;\n  } catch (error) {\n    console.log(error);\n    return error;\n  }\n});\n\nconst logOut = createAsyncThunk('auth/logout', async credentials => {\n  try {\n    let { data } = await axios.post('users/logout', credentials);\n    token.unset();\n    return data;\n  } catch (error) {\n    console.log(error);\n    return error;\n  }\n});\n\nconst fetchCurrentUser = createAsyncThunk(\n  'auth/refresh',\n  async (_, thunkAPI) => {\n    const state = thunkAPI.getState();\n    const persistedToken = state.auth.token;\n\n    if (persistedToken === null) {\n      return thunkAPI.rejectWithValue();\n    }\n\n    token.set(persistedToken);\n    try {\n      const { data } = await axios.get('/users/current');\n      return data;\n    } catch (error) {\n      console.log(error);\n      return error;\n    }\n  },\n);\n\nexport { register, logIn, logOut, fetchCurrentUser };\n","import { Component } from 'react'\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\nexport default class App extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <Loader\r\n        type=\"ThreeDots\"\r\n        color=\"#f0f0f0\"\r\n        height={50}\r\n        width={150}\r\n        timeout={20000}\r\n      />\r\n    );\r\n  }\r\n}","const getIsLoggedIn = state => state.auth.isLoggedIn;\nconst getUserName = state => state.auth.user.name;\nconst getFetchCurrentUser = state => state.auth.isFetchingCurrent;\n\nexport { getIsLoggedIn, getUserName, getFetchCurrentUser };\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst changeFilter = createAction('contacts/onChangeFilter');\r\n\r\nexport { changeFilter };\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n\r\nimport {\r\n  fetchContacts,\r\n  addContact,\r\n  deleteContact,\r\n} from './contacts-operations';\r\nimport { changeFilter } from './contacts-actions';\r\n\r\nconst items = createReducer([], {\r\n  [fetchContacts.fulfilled]: (_, { payload }) => payload,\r\n  [addContact.fulfilled]: (state, { payload }) => [...state, payload],\r\n  [deleteContact.fulfilled]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContacts.pending]: () => true,\r\n  [fetchContacts.fulfilled]: () => false,\r\n  [fetchContacts.rejected]: () => false,\r\n  [addContact.pending]: () => true,\r\n  [addContact.fulfilled]: () => false,\r\n  [addContact.rejected]: () => false,\r\n  [deleteContact.pending]: () => true,\r\n  [deleteContact.fulfilled]: () => false,\r\n  [deleteContact.rejected]: () => false,\r\n});\r\n\r\nconst contactsReducer = combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n});\r\n\r\nexport default contactsReducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\n//import { getUserName, getToken } from 'redux/auth/auth-selectors';\n\nimport { register, logIn, logOut, fetchCurrentUser } from './auth-operations';\n//\n\nconst initialState = {\n  user: { name: null, email: null },\n  token: null,\n  isLoggedIn: false,\n  getFetchCurrentUser: false,\n};\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  extraReducers: {\n    [register.fulfilled](state, { payload }) {\n      state.user = payload.user;\n      state.token = payload.token;\n      state.isLoggedIn = true;\n    },\n    [logIn.fulfilled](state, { payload }) {\n      state.user = payload.user;\n      state.token = payload.token;\n      state.isLoggedIn = true;\n    },\n    [logOut.fulfilled](state) {\n      state.user = { name: null, email: null };\n      state.token = null;\n      state.isLoggedIn = false;\n    },\n    [fetchCurrentUser.pending](state) {\n      state.getFetchCurrentUser = true;\n    },\n    [fetchCurrentUser.fulfilled](state, { payload }) {\n      state.user = payload;\n      state.isLoggedIn = true;\n      state.getFetchCurrentUser = false;\n    },\n    [fetchCurrentUser.rejected](state) {\n      state.getFetchCurrentUser = false;\n    },\n  },\n});\n\nexport default authSlice.reducer;\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport storage from 'redux-persist/lib/storage';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\n\nimport contactsReducer from 'redux/contacts/contacts-reducers';\nimport authReducer from 'redux/auth/auth-slice';\n\n//\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token', 'isLoggedIn'],\n};\n\nconst store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: contactsReducer,\n  },\n  middleware,\n});\n\nconst persistor = persistStore(store);\n\nexport { persistor, store };\n","import React, { Suspense, useEffect, lazy } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Routes, Route, Navigate } from 'react-router-dom';\nimport Loader from 'components/Loader/Loader.jsx';\n\nimport { getIsLoggedIn, getFetchCurrentUser } from 'redux/auth/auth-selectors';\nimport { fetchCurrentUser } from 'redux/auth/auth-operations';\nimport './App.css';\n//\n\nconst LoginPage = lazy(() => import('views/LoginPage/LoginPage.jsx'));\nconst RegistrationPage = lazy(() =>\n  import('views/RegistrationPage/RegistrationPage.jsx'),\n);\nconst PhonebookPage = lazy(() =>\n  import('views/PhonebookPage/PhonebookPage.jsx'),\n);\nconst UnknownPage = lazy(() => import('views/UnknownPage'));\n\nexport default function App() {\n  const isloggedIn = useSelector(getIsLoggedIn);\n\n  const dispatch = useDispatch();\n  const isFetchCurrentUser = useSelector(getFetchCurrentUser);\n\n  useEffect(() => {\n    dispatch(fetchCurrentUser());\n  }, [dispatch]);\n\n  return (\n    !isFetchCurrentUser && (\n      <>\n        <Routes>\n          <Route\n            path=\"/\"\n            element={\n              !isloggedIn ? (\n                <Navigate replace to=\"/login\" />\n              ) : (\n                <Navigate replace to=\"/phonebook\" />\n              )\n            }\n          />\n\n          <Route\n            path=\"/login\"\n            element={\n              !isloggedIn ? (\n                <Suspense fallback={<Loader />}>\n                  <LoginPage />\n                </Suspense>\n              ) : (\n                <Navigate replace to=\"/phonebook\" />\n              )\n            }\n          ></Route>\n          <Route\n            path=\"/registration\"\n            element={\n              !isloggedIn ? (\n                <Suspense fallback={<Loader />}>\n                  <RegistrationPage />\n                </Suspense>\n              ) : (\n                <Navigate replace to=\"/phonebook\" />\n              )\n            }\n          ></Route>\n          <Route\n            path=\"/phonebook/*\"\n            element={\n              isloggedIn ? (\n                <Suspense Suspense fallback={<Loader />}>\n                  <PhonebookPage />\n                </Suspense>\n              ) : (\n                <Navigate replace to=\"/login\" />\n              )\n            }\n          ></Route>\n          <Route\n            path=\"/*\"\n            element={\n              isloggedIn ? (\n                <Suspense fallback={<Loader />}>\n                  <UnknownPage />\n                </Suspense>\n              ) : (\n                <Navigate replace to=\"/login\" />\n              )\n            }\n          ></Route>\n        </Routes>\n      </>\n    )\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from 'redux/store';\n\nimport 'modern-normalize/modern-normalize.css';\n//import store from './redux/store.js';\nimport App from './App.js';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}