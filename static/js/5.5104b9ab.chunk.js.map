{"version":3,"sources":["components/RegistrationForm/RegistrationForm.module.css","views/RegistrationPage/RegistrationPage.module.css","components/RegistrationForm/RegistarionForm.jsx","views/RegistrationPage/RegistrationPage.jsx"],"names":["module","exports","RegistrationForm","dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","handleOnChange","e","target","value","className","s","form_wrapper","logo__wrapper","logo","onSubmit","alert","register","preventDefault","resetForm","form","label","input","type","onChange","pattern","title","required","onClick","reset_btn","submit__btn","btn","LoginPage","navigation","to"],"mappings":"mIACAA,EAAOC,QAAU,CAAC,aAAe,uCAAuC,MAAQ,gCAAgC,MAAQ,gCAAgC,IAAM,8BAA8B,UAAY,oCAAoC,cAAgB,wCAAwC,KAAO,iC,oBCA3SD,EAAOC,QAAU,CAAC,WAAa,uC,oGCgJhBC,EAxIU,WAEvB,IAAMC,EAAWC,cAEjB,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAgCJ,mBAAS,IAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KACA,EAA8CN,mBAAS,IAAvD,mBAAOO,EAAP,KAAwBC,EAAxB,KAEMC,EAAiB,SAACC,GACtB,MAAwBA,EAAEC,OAAlBV,EAAR,EAAQA,KAAMW,EAAd,EAAcA,MACd,OAAOX,GACL,IAAK,OACHC,EAAQU,GACR,MAEF,IAAK,QACHR,EAASQ,GACT,MAEA,IAAK,WACLN,EAAYM,GACZ,MAEA,IAAK,kBACLJ,EAAmBI,KA6BzB,OACE,sBAAKC,UAAWC,IAAEC,aAAlB,UACE,qBAAKF,UAAWC,IAAEE,cAAlB,SACE,sBAAMH,UAAWC,IAAEG,KAAnB,yBAEA,uBAAMC,SAlBK,SAACR,GAChB,GAAIL,IAAaE,EAGf,OAFED,EAAY,IACZE,EAAmB,IACdW,MAAM,0CAGbrB,EAASsB,YAAS,CAAEnB,OAAME,QAAOE,cAfnB,SAACK,GACjBA,EAAEW,iBACFnB,EAAQ,IACRI,EAAY,IACZE,EAAmB,IACnBJ,EAAS,IAWPkB,CAAUZ,IAUkBG,UAAWC,IAAES,KAAvC,UACA,wBAAOV,UAAWC,IAAEU,MAApB,8CAEE,uBACEX,UAAWC,IAAEW,MACbC,KAAK,OACLC,SAAUlB,EACVG,MAAOX,EACPA,KAAK,OACL2B,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,IAEV,wBAAQC,QAAS,kBAAM7B,EAAQ,KAAKW,UAAS,UAAKC,IAAEkB,WAAaN,KAAK,SAAtE,kBAKM,wBAAOb,UAAWC,IAAEU,MAApB,4CAEN,uBACEX,UAAWC,IAAEW,MACbC,KAAK,QACLC,SAAUlB,EACVR,KAAK,QACLW,MAAOT,EACPyB,QAAQ,2CACRC,MAAM,mCACNC,UAAQ,IAEV,wBAAQC,QAAS,kBAAM3B,EAAS,KAAKS,UAAS,UAAKC,IAAEkB,WAAaN,KAAK,SAAvE,kBAKF,wBAAOb,UAAWC,IAAEU,MAApB,0BAEE,uBACEX,UAAWC,IAAEW,MACbC,KAAK,WACLC,SAAUlB,EACVR,KAAK,WACLW,MAAOP,EACPuB,QAAQ,yHACRE,UAAQ,IAEV,wBAAQC,QAAS,kBAAMzB,EAAY,KAAKO,UAAS,UAAKC,IAAEkB,WAAaN,KAAK,SAA1E,kBAKF,wBAAOb,UAAWC,IAAEU,MAApB,6BAEE,uBACEX,UAAWC,IAAEW,MACbC,KAAK,WACLC,SAAUlB,EACVR,KAAK,kBACLW,MAAOL,EACPqB,QAAQ,yHACRE,UAAQ,IAEV,wBAAQC,QAAS,kBAAMvB,EAAmB,KAAKK,UAAS,UAAKC,IAAEkB,WAAaN,KAAK,SAAjF,kBAMF,wBAAQb,UAAS,UAAKC,IAAEmB,YAAP,YAAuBnB,IAAEoB,KAAOR,KAAK,WAAtD,gC,0BCpHOS,UAbG,WAGhB,OACE,qCACE,cAAC,EAAD,IACA,8BACE,uBAAMtB,UAAWC,IAAEsB,WAAnB,wBAA0C,cAAC,IAAD,CAAMC,GAAI,WAAV,qBAA1C","file":"static/js/5.5104b9ab.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_wrapper\":\"RegistrationForm_form_wrapper__2ZmzA\",\"label\":\"RegistrationForm_label__3vINF\",\"input\":\"RegistrationForm_input__330LV\",\"btn\":\"RegistrationForm_btn__2LNef\",\"reset_btn\":\"RegistrationForm_reset_btn__1e_vu\",\"logo__wrapper\":\"RegistrationForm_logo__wrapper__3IAAE\",\"logo\":\"RegistrationForm_logo__IAcWq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigation\":\"RegistrationPage_navigation__10rSl\"};","import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n//import { toast } from 'react-toastify';\r\n\r\nimport { register } from \"redux/auth/auth-operations\";\r\nimport s from \"./RegistrationForm.module.css\";\r\n//\r\n\r\n\r\nconst RegistrationForm = () => {\r\n  \r\n  const dispatch = useDispatch();\r\n\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n\r\n  const handleOnChange = (e) => {\r\n    const { name, value } = e.target;\r\n    switch(name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      \r\n      case 'email':\r\n        setEmail(value);\r\n        break;\r\n      \r\n        case 'password':\r\n        setPassword(value);\r\n        break;\r\n      \r\n        case 'confirmPassword':\r\n        setConfirmPassword(value);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const resetForm = (e) => {\r\n    e.preventDefault();\r\n    setName('');\r\n    setPassword('');\r\n    setConfirmPassword('');\r\n    setEmail('');\r\n  }\r\n\r\n  const onSubmit = (e) => {\r\n    if (password !== confirmPassword) {\r\n        setPassword('');\r\n        setConfirmPassword('');\r\n      return alert(`Password and confirmation do not match`);\r\n    }\r\n    else {\r\n      dispatch(register({ name, email, password }));\r\n      resetForm(e);\r\n    }    \r\n  };\r\n\r\n\r\n  return (\r\n    <div className={s.form_wrapper}>\r\n      <div className={s.logo__wrapper}>\r\n        <span className={s.logo}>Phonebook</span>\r\n      </div>\r\n        <form onSubmit={onSubmit} className={s.form}>\r\n        <label className={s.label}>\r\n          Name &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n          <input\r\n            className={s.input}\r\n            type=\"name\"\r\n            onChange={handleOnChange}\r\n            value={name}\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n          <button onClick={() => setName('')} className={`${s.reset_btn}`} type=\"button\">\r\n            X\r\n          </button>\r\n          </label>\r\n\r\n                <label className={s.label}>\r\n          E-mail &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n          <input\r\n            className={s.input}\r\n            type=\"email\"\r\n            onChange={handleOnChange}\r\n            name=\"email\"\r\n            value={email}\r\n            pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"\r\n            title=\"Example: bob.pupkin@somemail.com\"\r\n            required\r\n          />\r\n          <button onClick={() => setEmail('')} className={`${s.reset_btn}`} type=\"button\">\r\n            X\r\n          </button>\r\n          </label>\r\n  \r\n        <label className={s.label}>\r\n          Password &nbsp;\r\n          <input\r\n            className={s.input}\r\n            type=\"password\"\r\n            onChange={handleOnChange}\r\n            name=\"password\"\r\n            value={password}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            required\r\n          />\r\n          <button onClick={() => setPassword('')} className={`${s.reset_btn}`} type=\"button\">\r\n            X\r\n          </button>\r\n        </label>\r\n\r\n        <label className={s.label}>\r\n          Confirm &nbsp;&nbsp;\r\n          <input\r\n            className={s.input}\r\n            type=\"password\"\r\n            onChange={handleOnChange}\r\n            name=\"confirmPassword\"\r\n            value={confirmPassword}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            required\r\n          />\r\n          <button onClick={() => setConfirmPassword('')} className={`${s.reset_btn}`} type=\"button\">\r\n            X\r\n          </button>\r\n        </label>\r\n\r\n\r\n        <button className={`${s.submit__btn} ${ s.btn}`} type=\"onSubmit\">\r\n            Add contact\r\n          </button>\r\n        </form>\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default RegistrationForm;","import RegistrationForm from \"components/RegistrationForm/RegistarionForm\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport s from './RegistrationPage.module.css';\r\n//\r\n\r\n\r\nconst LoginPage = () => {\r\n\r\n\r\n  return (\r\n    <>\r\n      <RegistrationForm />\r\n      <div>\r\n        <span className={s.navigation}>Or you can <Link to={'../login'}>sing in</Link> if you already registered.</span>\r\n      </div>      \r\n    </>\r\n  )\r\n};\r\n\r\nexport default LoginPage;"],"sourceRoot":""}